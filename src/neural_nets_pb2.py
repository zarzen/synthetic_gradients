# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: neural_nets.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='neural_nets.proto',
  package='nn',
  syntax='proto3',
  serialized_pb=_b('\n\x11neural_nets.proto\x12\x02nn\"5\n\nForwardMsg\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x05\x12\x15\n\routput_matrix\x18\x02 \x01(\x0c\"5\n\x0b\x42\x61\x63kwardMsg\x12\x10\n\x08\x62\x61tch_id\x18\x01 \x01(\x05\x12\x14\n\x0c\x64\x65lta_matrix\x18\x02 \x01(\x0c\" \n\rPlainResponse\x12\x0f\n\x07message\x18\x01 \x01(\t2|\n\x11LayerDataExchange\x12\x30\n\tSendInput\x12\x0e.nn.ForwardMsg\x1a\x11.nn.PlainResponse\"\x00\x12\x35\n\rBackwardDelta\x12\x0f.nn.BackwardMsg\x1a\x11.nn.PlainResponse\"\x00\x62\x06proto3')
)




_FORWARDMSG = _descriptor.Descriptor(
  name='ForwardMsg',
  full_name='nn.ForwardMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='nn.ForwardMsg.batch_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='output_matrix', full_name='nn.ForwardMsg.output_matrix', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=25,
  serialized_end=78,
)


_BACKWARDMSG = _descriptor.Descriptor(
  name='BackwardMsg',
  full_name='nn.BackwardMsg',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='batch_id', full_name='nn.BackwardMsg.batch_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='delta_matrix', full_name='nn.BackwardMsg.delta_matrix', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=80,
  serialized_end=133,
)


_PLAINRESPONSE = _descriptor.Descriptor(
  name='PlainResponse',
  full_name='nn.PlainResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='nn.PlainResponse.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=135,
  serialized_end=167,
)

DESCRIPTOR.message_types_by_name['ForwardMsg'] = _FORWARDMSG
DESCRIPTOR.message_types_by_name['BackwardMsg'] = _BACKWARDMSG
DESCRIPTOR.message_types_by_name['PlainResponse'] = _PLAINRESPONSE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

ForwardMsg = _reflection.GeneratedProtocolMessageType('ForwardMsg', (_message.Message,), dict(
  DESCRIPTOR = _FORWARDMSG,
  __module__ = 'neural_nets_pb2'
  # @@protoc_insertion_point(class_scope:nn.ForwardMsg)
  ))
_sym_db.RegisterMessage(ForwardMsg)

BackwardMsg = _reflection.GeneratedProtocolMessageType('BackwardMsg', (_message.Message,), dict(
  DESCRIPTOR = _BACKWARDMSG,
  __module__ = 'neural_nets_pb2'
  # @@protoc_insertion_point(class_scope:nn.BackwardMsg)
  ))
_sym_db.RegisterMessage(BackwardMsg)

PlainResponse = _reflection.GeneratedProtocolMessageType('PlainResponse', (_message.Message,), dict(
  DESCRIPTOR = _PLAINRESPONSE,
  __module__ = 'neural_nets_pb2'
  # @@protoc_insertion_point(class_scope:nn.PlainResponse)
  ))
_sym_db.RegisterMessage(PlainResponse)



_LAYERDATAEXCHANGE = _descriptor.ServiceDescriptor(
  name='LayerDataExchange',
  full_name='nn.LayerDataExchange',
  file=DESCRIPTOR,
  index=0,
  options=None,
  serialized_start=169,
  serialized_end=293,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendInput',
    full_name='nn.LayerDataExchange.SendInput',
    index=0,
    containing_service=None,
    input_type=_FORWARDMSG,
    output_type=_PLAINRESPONSE,
    options=None,
  ),
  _descriptor.MethodDescriptor(
    name='BackwardDelta',
    full_name='nn.LayerDataExchange.BackwardDelta',
    index=1,
    containing_service=None,
    input_type=_BACKWARDMSG,
    output_type=_PLAINRESPONSE,
    options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_LAYERDATAEXCHANGE)

DESCRIPTOR.services_by_name['LayerDataExchange'] = _LAYERDATAEXCHANGE

# @@protoc_insertion_point(module_scope)
